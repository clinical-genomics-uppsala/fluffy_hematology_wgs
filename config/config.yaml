resources: "{{FLUFFY_HOME}}/config/resources.yaml"
samples: "samples.tsv"
units: "units.tsv"
output: "{{FLUFFY_HOME}}/config/output_files.yaml"

aligner: "bwa_gpu" # bwa_gpu or bwa_sentieon

modules:
  alignment: "906d25d0d4791eb5a54cba9954fddf29e27b85dd"
  annotation: "cd97f30"
  cnv_sv: "v0.4.1"
  compression: "v1.1.0"
  filtering: "v0.3.0"
  fusions: "12f8354"
  parabricks: "v1.1.0"
  prealignment: "v1.1.0"
  qc: "v0.3.0"
  reports: "7c8b8c5"
  snv_indels: "v0.6.0"
  misc: "v0.1.0"
  sentieon: "b002d39"

default_container: "docker://hydragenetics/common:1.8.1"

reference:
  design_bed: ""
  design_intervals: "" #hsmetrics
  design_intervals_gatk_cnv: ""
  fai: ""
  fasta: ""
  fasta_rna: ""
  genome_dir: "" # req by align not used
  sites: ""
  wgs_intervals: ""
  skip_chrs:
    - chrM

trimmer_software: "fastp_pe"

annotate_cnv:
  cna_exons: "" 

arriba:
  assembly: ""
  blacklist: ""
  container: "docker://hydragenetics/arriba:2.3.0"
  extra: "-p "
  gtf: ""

arriba_draw_fusion:
  container: "docker://hydragenetics/arriba:2.3.0"
  cytobands: ""
  gtf: ""
  protein_domains: ""

bcftools_SNV:
  all: ""
  aml: ""
  tm: "" 

bcftools_SV:
  all: ""
  aml: ""

cnvkit_batch:
  container: "docker://hydragenetics/cnvkit:0.9.9"
  method: "wgs"
  normal_reference: ""
  extra: "--drop-low-coverage "

cnvkit_call:
  container: "docker://hydragenetics/cnvkit:0.9.9"

cnvkit_diagram:
  container: "docker://hydragenetics/cnvkit:0.9.9"

cnv_html_report:
  show_table: true
  template_dir: "{{FLUFFY_HOME}}/config/cnv_report_template"
  cnv_vcf:
    - annotation: cna_exons
      filter: cnv_hardfilter

cnvkit_scatter:
  container: "docker://hydragenetics/cnvkit:0.9.9"
  extra: "-c {locus} --y-min -5 --y-max 5"
  cna: 
    "chr4": "DUX4"

cnvkit_scatter_whole:
  container: "docker://hydragenetics/cnvkit:0.9.9"
  extra: "--y-min -5 --y-max 5"

cnvkit_table:
  bedfile: ""
  cyto_coordinates: ""

crumble:
  container: "docker://hydragenetics/crumble:0.8.3"
  extra: "-O CRAM"

dux4_igh:
  region: "chr14:105586437-106879844"

dux4_erg:
  region: "chr21:38380027-38498442"

fastp_pe:
  container: "docker://hydragenetics/fastp:0.20.1"

fastqc:
  container: "docker://hydragenetics/fastqc:0.11.9"

filter_vcf:
  sample_name_regex: "^([A-Za-z0-9-]+_[RT])$"
  germline: "{{FLUFFY_HOME}}/config/config_germline_filter.yaml"
  cnv_hardfilter: "{{FLUFFY_HOME}}/config/config_cnv_hardfilter.yaml"
  somatic: "{{FLUFFY_HOME}}/config/config_snv_softfilter.yaml"

fusioncatcher:
  container: "docker://hydragenetics/fusioncatcher:1.33"
  genome_path: ""

gatk_call_copy_ratio_segments:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_cnv_collect_allelic_counts:
  container: "docker://hydragenetics/gatk4:4.2.2.0"
  SNP_interval: ""

gatk_collect_read_counts:
  container: "docker://hydragenetics/gatk4:4.2.2.0"
  
gatk_model_segments:
  container: "docker://hydragenetics/gatk4:4.2.2.0"

gatk_cnv_denoise_read_counts_by_sex:
  container: "docker://hydragenetics/gatk4:4.2.2.0"
  pon_female: ""
  pon_male: ""

manta_config_t:
  container: "docker://hydragenetics/manta:1.6.0"

manta_config_tn:
  container: "docker://hydragenetics/manta:1.6.0"

manta_run_workflow_t:
  container: "docker://hydragenetics/manta:1.6.0"

manta_run_workflow_tn:
  container: "docker://hydragenetics/manta:1.6.0"

mosdepth:
  by: "500"
  container: "docker://hydragenetics/mosdepth:0.3.2"
  extra: "--fast-mode --no-per-base --mapq 20 "
  thresholds: "1,5,10,15,20,30,50"

mosdepth_bed:
  container: "docker://hydragenetics/mosdepth:0.3.2"
  design_bed: ""

multiqc:
  container: "docker://hydragenetics/multiqc:1.21"
  reports:
    DNA:
      config: "{{FLUFFY_HOME}}/config/multiqc_dna_config.yaml"
      included_unit_types: ['T', 'N']
      qc_files:
        - "qc/fastqc/{sample}_{type}_{flowcell}_{lane}_{barcode}_{read}_fastqc.zip"
        - "qc/mosdepth/{sample}_{type}.mosdepth.global.dist.txt"
        - "qc/mosdepth/{sample}_{type}.mosdepth.region.dist.txt"
        - "qc/mosdepth/{sample}_{type}.mosdepth.summary.txt"
        - "qc/mosdepth/{sample}_{type}.regions.bed.gz"
        - "qc/mosdepth/{sample}_{type}.regions.bed.gz.csi"
        - "qc/picard_collect_alignment_summary_metrics/{sample}_{type}.alignment_summary_metrics.txt"
        - "qc/picard_collect_duplication_metrics/{sample}_{type}.duplication_metrics.txt"
        - "qc/picard_collect_gc_bias_metrics/{sample}_{type}.gc_bias.pdf"
        - "qc/picard_collect_gc_bias_metrics/{sample}_{type}.gc_bias.detail_metrics"
        - "qc/picard_collect_gc_bias_metrics/{sample}_{type}.gc_bias.summary_metrics"
        - "qc/picard_collect_multiple_metrics/{sample}_{type}.alignment_summary_metrics"
        - "qc/picard_collect_multiple_metrics/{sample}_{type}.base_distribution_by_cycle_metrics"
        - "qc/picard_collect_multiple_metrics/{sample}_{type}.base_distribution_by_cycle.pdf"
        - "qc/picard_collect_multiple_metrics/{sample}_{type}.insert_size_metrics"
        - "qc/picard_collect_multiple_metrics/{sample}_{type}.insert_size_histogram.pdf"
        - "qc/picard_collect_multiple_metrics/{sample}_{type}.quality_by_cycle_metrics"
        - "qc/picard_collect_multiple_metrics/{sample}_{type}.quality_by_cycle.pdf"
        - "qc/picard_collect_multiple_metrics/{sample}_{type}.quality_distribution_metrics"
        - "qc/picard_collect_multiple_metrics/{sample}_{type}.quality_distribution.pdf"
        - "qc/picard_collect_wgs_metrics/{sample}_{type}.txt"
        - "qc/picard_collect_hs_metrics/{sample}_{type}.HsMetrics.txt"
        - "qc/samtools_stats/{sample}_{type}.samtools-stats.txt"
        - "qc/multiqc/DNA_number.table.tsv"
        - "qc/somalier/somalier_relate.pairs.tsv"
        - "qc/somalier/somalier_relate.samples.tsv"
        - "qc/somalier/somalier_samples_mqc.tsv"
    RNA:
      config: "{{FLUFFY_HOME}}/config/multiqc_rna_config.yaml"
      included_unit_types: ["R"]
      qc_files:
        - "qc/fastqc/{sample}_{type}_{flowcell}_{lane}_{barcode}_{read}_fastqc.zip"
        - "qc/mosdepth_bed/{sample}_{type}.mosdepth.global.dist.txt"
        - "qc/mosdepth_bed/{sample}_{type}.mosdepth.region.dist.txt"
        - "qc/mosdepth_bed/{sample}_{type}.mosdepth.summary.txt"
        - "qc/mosdepth_bed/{sample}_{type}.regions.bed.gz"
        - "qc/mosdepth_bed/{sample}_{type}.regions.bed.gz.csi"
        - "qc/rseqc_gene_body_coverage/{sample}_{type}.geneBodyCoverage.txt"
        - "qc/rseqc_inner_distance/{sample}_{type}.inner_distance.txt"
        - "qc/rseqc_inner_distance/{sample}_{type}.inner_distance_freq.txt"
        - "prealignment/fastp_pe/{sample}_{type}_{flowcell}_{lane}_{barcode}_fastp.json"
        - "prealignment/sortmerna/{sample}_{type}.rrna.log"
        - "qc/multiqc/RNA_number.table.tsv"
        - "qc/picard_collect_alignment_summary_metrics/{sample}_{type}.alignment_summary_metrics.txt"
        - "fusions/star_fusion/{sample}_{type}/Log.final.out"
        - "fusions/star_fusion/{sample}_{type}/ReadsPerGene.out.tab"

pbrun_fq2bam:
  container: "docker://nvcr.io/nvidia/clara/clara-parabricks:4.1.1-1"

pbrun_mutectcaller_t:
  container: "docker://nvcr.io/nvidia/clara/clara-parabricks:4.1.1-1"

pbrun_mutectcaller_tn:
  container: "docker://nvcr.io/nvidia/clara/clara-parabricks:4.1.1-1"
  
peddy:
  container: "docker://hydragenetics/peddy:0.4.8"
  extra: "--sites hg38 "
  config: "{{FLUFFY_HOME}}/config/peddy_mqc.yaml" 

picard_collect_alignment_summary_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_duplication_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_gc_bias_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_hs_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

picard_collect_multiple_metrics:
  container: "docker://hydragenetics/picard:2.25.0"
  output_ext:
    - "alignment_summary_metrics"
    - "base_distribution_by_cycle_metrics"
    - "base_distribution_by_cycle.pdf"
    - "insert_size_metrics"
    - "insert_size_histogram.pdf"
    - "quality_by_cycle_metrics"
    - "quality_by_cycle.pdf"
    - "quality_distribution_metrics"
    - "quality_distribution.pdf"

picard_collect_wgs_metrics:
  container: "docker://hydragenetics/picard:2.25.0"

pindel_update_vcf_sequence_dictionary:
  container: "docker://hydragenetics/picard:2.25.0"

pindel_call:
  include_bed: ""
  container: "docker://hydragenetics/pindel:0.2.5b9"

pindel2vcf:
  container: "docker://hydragenetics/pindel:0.2.5b9"
  extra: "-is 5 -he 0.01 -e 3"

rseqc_gene_body_coverage:
  bed: ""
  container: "docker://hydragenetics/rseqc:4.0.0"

rseqc_inner_distance:
  bed: ""
  container: "docker://hydragenetics/rseqc:4.0.0"

sentieon:
  container: "" 
  reference: ""
  sentieon: ""
  mills: ""
  dbsnp: ""
  tnscope_settings: "--min_init_normal_lod 0.5 --min_normal_lod 3.0 --min_init_tumor_lod 1.0 --min_tumor_lod 3 --trim_soft_clip"
  dnascope_settings: "--pcr_indel_model NONE"
  dbsnp: ""
  dnascope_model: ""
  tnscope_model: ""

simple_sv_annotation:
  container: "docker://hydragenetics/simple_sv_annotation:2019.02.18"
  panel: ""
  fusion_pairs: ""

snpeff:
  container: "docker://hydragenetics/snpeff:5.0"
  db: ""

somalier_extract:
  container: "docker://brentp/somalier:v0.2.18"
  sites: ""
  extra: ""
  
somalier_mqc:
  config: "{{FLUFFY_HOME}}/config/somalier_mqc.yaml"   

somalier_relate: 
  container: "docker://brentp/somalier:v0.2.18"
  extra: "--infer"

sortmerna:
  container: "docker://hydragenetics/sortmerna:4.3.4"
  fasta:
    - ""
    - ""
    - ""
    - ""
    - ""
    - ""
  index: ""

spring:
  container: "docker://hydragenetics/spring:1.0.1"

star:
  container: "docker://hydragenetics/star:2.7.10a"
  genome_index: ""
  extra: "--quantMode GeneCounts --sjdbGTFfile /path/to/arriba_ref.gtf --outSAMtype BAM SortedByCoordinate --chimSegmentMin 10 --chimOutType WithinBAM SoftClip --chimJunctionOverhangMin 10 --chimScoreMin 1 --chimScoreDropMax 30 --chimScoreJunctionNonGTAG 0 --chimScoreSeparation 1 --alignSJstitchMismatchNmax 5 -1 5 5 --chimSegmentReadGapMax 3"

star_fusion:
  container: "docker://trinityctat/starfusion:1.10.1"
  extra: "--examine_coding_effect"
  genome_path: ""

svdb_merge:
  tc_method:
    - name: pathology
      cnv_caller:
        - cnvkit
        - gatk
  container: "docker://hydragenetics/svdb:2.6.0"

svdb_query:
  container: "docker://hydragenetics/svdb:2.6.0"
  db_string: "--db path_to_svdb_cnv.vcf --out_frq Normal_AF --out_occ Normal_OCC"

vep:
  container: "docker://hydragenetics/vep:111"
  vep_cache: ""
  mode: "--offline --cache --merged "
  extra: "--assembly GRCh38 --check_existing --pick --variant_class --everything "

vt_decompose:
  container: "docker://hydragenetics/vt:2015.11.10"

vt_normalize:
  container: "docker://hydragenetics/vt:2015.11.10"
